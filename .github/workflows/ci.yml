name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info
        
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build production files
        run: npm run build
        env:
          REACT_APP_VERSION: ${{ github.sha }}
      - name: Upload files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
          retention-days: 1
          if-no-files-found: error
    
  deploy-dev:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref_name == 'main'
    environment:
      name: Dev
      url: https://dev.axelrindle.de/
    steps:
      - name: Download artifact files
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Deploy
        uses: crazy-max/ghaction-github-pages@v2.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        with:
          repo: axelrindle/axelrindle.github.io
          target_branch: main
          keep_history: true
          build_dir: build
          jekyll: false

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref_name == 'main'
    environment:
      name: Production
      url: https://axelrindle.de/
    steps:
      - name: Download artifact files
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSWORD }}
          source: build
          target: ${{ secrets.DEPLOY_TARGET }}
          strip_components: 1
          rm: true
